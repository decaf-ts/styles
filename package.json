{
  "name": "@decaf-ts/styles",
  "version": "0.0.10",
  "description": "template for ts projects",
  "main": "./dist/main.min.css",
  "style": "./dist/main.min.css",
  "sass": "./src/main.scss",
  "type": "module",
  "exports": {
    "./dist/*": {
      "style": "./dist/*",
      "sass": "./src/*"
    },
    "./package.json": {
      "default": "./package.json"
    }
  },
  "license": "MIT",
  "files": [
    "src",
    "dist"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/decaf-ts/styles.git"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "do-install": "NPM_TOKEN=$(cat .npmtoken) npm install",
    "update-dependencies": "PREFIX=\"decaf-ts\"; npm ls | grep \"$PREFIX\" | awk -F/ '{print $NF}' | sed 's/@.*//' | xargs -I package npm update @\"$PREFIX\"/package",
    "update-scripts": "npx update-scripts",
    "on-first-run": "npx update-scripts --boot",
    "set-git-auth": "git config url.\"https://api:$(cat .token)@github.com/\".insteadOf \"https://github.com/\" && git config url.\"https://ssh:$(cat .token)@github.com/\".insteadOf \"ssh://git@github.com/\" && git config url.\"https://git:$(cat .token)@github.com/\".insteadOf \"git@github.com:\"",
    "flash-forward": "npx npm-check-updates -u && npm run do-install",
    "reset": "rm -rf * && git checkout . && git pull && npm run do-install",
    "build": "node ./bin/build.js",
    "watch": "node bin/watch.js",
    "build:prod": "node ./bin/build.js --prod",
    "test": "jest --runInBand --coverage --detectOpenHandles",
    "test:all": "jest --testPathPattern=\"/tests\" --passWithNoTests --detectOpenHandles",
    "test:circular": "dpdm -T --no-warning --no-tree ./src/index.ts",
    "coverage": "rimraf ./workdocs/reports/data/*.json && npm run test:all -- --coverage --config=./workdocs/reports/jest.coverage.config.ts",
    "lint": "eslint .",
    "lint-fix": "eslint --fix .",
    "prepare-pr": "npm run lint-fix && npm run build:prod && npm run coverage && npm run docs",
    "prepare-release": "npm run lint-fix && npm run build:prod && npm run coverage && npm run docs",
    "release": "./bin/tag-release.sh",
    "clean-publish": "npx clean-publish",
    "drawings": "for FILE in workdocs/drawings/*.drawio; do echo \"converting $FILE to image...\" && docker run --rm -v $(pwd):/data rlespinasse/drawio-export --format png $FILE; done && cp -rf workdocs/drawings/export/* workdocs/resources/",
    "uml": "cd workdocs/uml && for FILE in ./*.puml; do docker run --rm -v $(pwd):/work -w /work miy4/plantuml -DPLANTUML_LIMIT_SIZE=8192 -tpng $FILE; done && cd ../.. && cp -fr workdocs/uml/*.png workdocs/resources/",
    "docs": "npx rimraf ./docs && mkdir docs && npx build-scripts --docs",
    "publish-docs": "docker run -it --rm --user $(id -u):$(id -g) -v \"$(pwd)/workdocs/confluence:/content\" -e ATLASSIAN_API_TOKEN=$(cat .confluence-token) ghcr.io/markdown-confluence/publish:latest",
    "link": "npm run unlink && npm run build:prod && cd lib && npm link && npm ls -g --depth=0 --link=true && cd ..",
    "unlink": "npm rm --global @decaf-ts/styles && npm ls -g --depth=0 --link=true",
    "repo:init": "codex exec \"$(cat ./.codex/prompts/repo-setup.md)\nbase_path is `./`, initialize the repository\"",
    "repo:setup": "codex exec \"$(cat ./.codex/prompts/repo-setup.md)\nbase_path is ./\"",
    "repo:doc": "codex exec \"$(cat ./.codex/prompts/doc.md) $(cat ./.codex/prompts/bulk-docs.md)\nbase_path is ./\"",
    "repo:tests": "codex exec \"$(cat ./.codex/prompts/bulk-tests.md)\nbase_path is ./ and coverage is 95%\" -s workspace-write",
    "repo:readme": "codex exec \"$(cat ./.codex/prompts/update-readme.md)\nbase_path is ./\"",
    "repo:pr": "npm run repo:doc && npm run repo:tests && npm run repo:readme",
    "sync-codex": "./bin/sync-codex.sh"
  },
  "keywords": [
    "plantuml",
    "mermaid",
    "uml",
    "drawio",
    "mddocs",
    "md",
    "jsdoc",
    "doc",
    "docs",
    "documentation",
    "test",
    "reports",
    "confluence",
    "ci/cd",
    "ci",
    "cd",
    "template",
    "typescript",
    "ts",
    "scss",
    "sass",
    "css",
    "styles"
  ],
  "author": "Tiago Venceslau and Contributors",
  "bugs": {
    "url": "https://github.com/decaf-ts/styles/issues"
  },
  "homepage": "https://github.com/decaf-ts/styles#readme",
  "devDependencies": {
    "@decaf-ts/utils": "latest",
    "@eslint/js": "^9.25.1",
    "@rollup/plugin-commonjs": "^28.0.3",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/plugin-typescript": "^12.1.2",
    "@stylistic/eslint-plugin": "^4.2.0",
    "@types/jest": "^29.5.14",
    "autoprefixer": "^10.4.21",
    "chokidar": "^4.0.3",
    "clean-publish": "^5.1.0",
    "cssnano": "^7.1.1",
    "dpdm": "^3.14.0",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-prettier": "^5.2.6",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "jsdoc": "^4.0.4",
    "jsdoc-mermaid": "^1.0.0",
    "markdown-include": "^0.4.3",
    "minimist": "^1.2.8",
    "nodemon": "^3.1.9",
    "npm-check-updates": "^18.0.0",
    "postcss": "^8.5.6",
    "postcss-cli": "^11.0.1",
    "prettier": "3.5.3",
    "rimraf": "^6.0.1",
    "rollup": "^4.40.0",
    "sass": "^1.92.1",
    "ts-jest": "^29.3.2",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.31.0"
  }
}
